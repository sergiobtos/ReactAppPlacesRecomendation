{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","Map","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","current","Marker","position","ref","PlaceItem","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","a","process","id","Authorization","token","onDelete","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","to","PlaceList","items","length","place","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","responseData","places","fetchPlaces","deletedPlaceId","prevPlaces","filter"],"mappings":"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","file":"static/js/7.0892783a.chunk.js","sourcesContent":["//imr\r\nimport React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n    return(\r\n        <div className={ `card ${props.className}`} style={props.style}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default  Card;\r\n\r\n","import React, { useRef, useEffect } from 'react';\r\n\r\nimport './Map.css';\r\n\r\nconst Map = props => {\r\n    const mapRef = useRef();\r\n    const { center, zoom} = props;\r\n    useEffect(()=>{\r\n        \r\n        const map = new window.google.maps.Map(mapRef.current, {\r\n            center: center ,\r\n            zoom: zoom\r\n        });\r\n        new window.google.maps.Marker({position: center, map: map});\r\n    }, [center, zoom]); \r\n\r\n    \r\n    return <div ref={mapRef} className={ `map ${props.className}`} style={props.style}><h1>sergio</h1></div>\r\n};\r\n\r\nexport default Map;","import React, {useState, useContext} from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\nimport Map from '../../shared/components/UIElements/Map';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport {useHttpClient} from '../../shared/hooks/http-hook';\r\nimport './PlaceItem.css';\r\n\r\nconst PlaceItem = props => {\r\n    const { isLoading, error, sendRequest, clearError} = useHttpClient();\r\n    const auth = useContext( AuthContext )\r\n    const [showMap, setShowMap] = useState(false);\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n    const openMapHandler = () => setShowMap(true);\r\n\r\n    const closeMapHandler = () => setShowMap(false);\r\n\r\n    const showDeleteWarningHandler = () => {\r\n        setShowConfirmModal(true);\r\n    }\r\n\r\n    const cancelDeleteHandler = () => {\r\n        setShowConfirmModal(false);\r\n    }\r\n\r\n    const confirmDeleteHandler = async () => {\r\n        setShowConfirmModal(false);\r\n        try {\r\n            await sendRequest(process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`, 'DELETE', null, {\r\n                Authorization: 'Bearer '+ auth.token\r\n              });\r\n            props.onDelete(props.id);\r\n         } catch (err) {}\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <Modal \r\n            show={showMap} \r\n            onCancel={closeMapHandler} \r\n            header={props.address} \r\n            contentClass=\"place-item__modal-content\"\r\n            footerClass=\"place-item__modal-actions\"\r\n            footer={<Button onClick={closeMapHandler}>Close</Button>}\r\n            >\r\n            <div className=\"map-container\"><Map center={props.coordinates} zoom={16}/></div>  \r\n            </Modal>\r\n            <Modal \r\n            show={showConfirmModal}\r\n            onClick={cancelDeleteHandler}\r\n            header=\"Are your sure?\" \r\n            footerClass=\"place-item__modal-actions\" \r\n            footer={\r\n                <React.Fragment>\r\n                    <Button inverse onClick={cancelDeleteHandler}>CANCEL</Button>\r\n                    <Button danger onClick={confirmDeleteHandler}>DELETE</Button>\r\n                </React.Fragment>\r\n            }>\r\n                <p>Do you want to proceed and delete this place? Please note that it can't be undone thereafter.</p>\r\n            </Modal>\r\n        <li className=\"place-item\">\r\n            <Card className=\"place-item__content\">\r\n            {isLoading && <LoadingSpinner  asOverlay />}\r\n            <div className=\"place-item__image\">\r\n                <img src={process.env.REACT_APP_ASSET_URL + `${props.image}`} alt={props.title}/>\r\n            </div>\r\n            <div className=\"place-item__info\">\r\n                <h2>{props.title}</h2>\r\n                <h3>{props.address}</h3>\r\n                <p>{props.description}</p>\r\n            </div>\r\n            <div className=\"place-item__action\">\r\n                <Button inverse onClick={openMapHandler}>View on Map</Button>\r\n                {auth.userId === props.creatorId  && (\r\n                    <React.Fragment>\r\n                        <Button to={`/places/${props.id}`}>Edit</Button>\r\n                        <Button danger onClick={showDeleteWarningHandler} >Delete</Button>\r\n                    </React.Fragment>\r\n                )}    \r\n            </div>\r\n            </Card>\r\n        </li>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default PlaceItem;","import React from 'react';\r\n\r\nimport './PlaceList.css';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport PlaceItem from './PlaceItem';\r\nimport Button from '../../shared/components/FormElements/Button';\r\n\r\nconst PlaceList = props => {\r\n    if(props.items.length === 0){\r\n        return (\r\n        <div className=\"place-list center\">\r\n            <Card>\r\n                <h2>No places found, maybe create one?</h2>\r\n                <Button to=\"/places/new\">Share Place</Button>\r\n            </Card>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ul className=\"place-list\">\r\n            {props.items.map(place => <PlaceItem\r\n            key={place.id} \r\n            id={place.id} \r\n            image={place.image} \r\n            title={place.title}\r\n            description={place.description}\r\n            address={place.address}\r\n            creatorId={place.creator}\r\n            coordinates={place.location}\r\n            onDelete={props.onDeletePlace}\r\n            />)}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default PlaceList;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport PlaceList from '../components/PlaceList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport {useHttpClient} from '../../shared/hooks/http-hook';\r\n\r\n\r\nconst UserPlaces = () => {\r\n    const [loadedPlaces, setLoadedPlaces] = useState();\r\n    const { isLoading, error, sendRequest, clearError} = useHttpClient();\r\n\r\n    const userId = useParams().userId;\r\n\r\n    useEffect(()=>{\r\n        const fetchPlaces = async () =>{\r\n            try {\r\n               const responseData = await sendRequest(\r\n                process.env.REACT_APP_BACKEND_URL + `/places/user/${userId}`\r\n                   ); \r\n               setLoadedPlaces(responseData.places);\r\n            } catch (err) {\r\n                \r\n            }\r\n        };\r\n        fetchPlaces();\r\n    }, [sendRequest, userId])\r\n\r\n    const placeDeletedHandler = deletedPlaceId => {\r\n        setLoadedPlaces(prevPlaces => \r\n            prevPlaces.filter(place => place.id !== deletedPlaceId));\r\n    };\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError}/>\r\n            {isLoading && (\r\n                <div className=\"center\">\r\n                    <LoadingSpinner />\r\n                </div>\r\n            )}\r\n            {!isLoading && loadedPlaces && <PlaceList items={ loadedPlaces} onDeletePlace={placeDeletedHandler}/> }\r\n            \r\n        </React.Fragment>\r\n    )   \r\n};\r\n\r\nexport default UserPlaces;"],"sourceRoot":""}