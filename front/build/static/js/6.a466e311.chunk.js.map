{"version":3,"sources":["shared/components/UIElements/Card.js","shared/util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","places/pages/UpdatePlace.js"],"names":["Card","props","className","style","children","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","row","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","UpdatePlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedPlace","setLoadedPlace","placeId","useParams","history","useHistory","title","description","inputHandler","setFormData","a","process","responseData","place","fetchPlace","placeUpdateSubmitHandler","preventDefault","JSON","stringify","token","push","userId","Fragment","onClear","onSubmit","disabled"],"mappings":"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","file":"static/js/6.a466e311.chunk.js","sourcesContent":["//imr\r\nimport React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n    return(\r\n        <div className={ `card ${props.className}`} style={props.style}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default  Card;\r\n\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, {useReducer, useEffect} from 'react';\r\n\r\nimport { validate } from '../../util/validators';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'CHANGE':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            };\r\n        case 'TOUCH':\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst Input = props => {\r\n    const [inputState, dispatch] =  useReducer(inputReducer, {\r\n        value: props.initialValue || '',\r\n        isTouched: false,\r\n        isValid: props.initialValid || false\r\n    });\r\n\r\n    const {id, onInput} = props;\r\n    const { value, isValid} = inputState;\r\n\r\n    useEffect(() => {\r\n        onInput(id, value, isValid)\r\n    }, [id, value, isValid, onInput]);\r\n\r\n    const changeHandler = event => {\r\n       dispatch({\r\n           type: 'CHANGE', \r\n           val: event.target.value,\r\n           validators: props.validators}\r\n        );\r\n    };\r\n\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type: 'TOUCH'\r\n        });\r\n    };\r\n\r\n    const element = \r\n        props.element === 'input' ? (\r\n        <input \r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder} \r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={ inputState.value}\r\n        /> \r\n        ) : (\r\n        <textarea \r\n        id={props.id} \r\n        rows={props.row || 3}\r\n        value={ inputState.value}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        />);\r\n\r\n    \r\n\r\n    return (\r\n    <div className={ `form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n        <label htmlFor={props.id}>{ props.label}</label>\r\n        {element}\r\n        {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Input;","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'INPUT_CHANGE':\r\n        let formIsValid = true;\r\n        for (const inputId in state.inputs) {\r\n          if(!state.inputs[inputId]){\r\n            continue;\r\n          }\r\n          if (inputId === action.inputId) {\r\n            formIsValid = formIsValid && action.isValid;\r\n          } else {\r\n            formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n          }\r\n        }\r\n        return {\r\n          ...state,\r\n          inputs: {\r\n            ...state.inputs,\r\n            [action.inputId]: { value: action.value, isValid: action.isValid }\r\n          },\r\n          isValid: formIsValid\r\n        };\r\n      case 'SET_DATA':\r\n        return { \r\n          inputs: action.inputs,\r\n          isValid: action.formIsValid\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    });\r\n\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n          type: 'INPUT_CHANGE',\r\n          value: value,\r\n          isValid: isValid,\r\n          inputId: id\r\n        });\r\n      }, []);\r\n\r\n      const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n          type: 'SET_DATA',\r\n          inputs: inputData,\r\n          formIsValid: formValidity \r\n        });\r\n      }, []);\r\n\r\n      return [formState, inputHandler, setFormData];\r\n};","import React, { useEffect, useState, useContext} from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\n\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH} from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport {useHttpClient} from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\n\r\nimport './PlaceForm.css';\r\n\r\n\r\n\r\nconst UpdatePlace = () => {\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendRequest, clearError} = useHttpClient();\r\n    const [loadedPlace, setLoadedPlace] = useState();\r\n    const placeId = useParams().placeId;\r\n    const history = useHistory();\r\n\r\n    const [formState, inputHandler, setFormData] = useForm({\r\n        title: \r\n        {value: \"\", isValid: false},\r\n        description:\r\n        {value: \"\", isValid:false} \r\n    }, false);\r\n\r\n    useEffect(()=> {\r\n        const fetchPlace = async () =>{\r\n            try {\r\n               const responseData = await sendRequest(\r\n                process.env.REACT_APP_BACKEND_URL + `/places/${placeId}`\r\n                   ); \r\n               setLoadedPlace(responseData.place);\r\n               setFormData({\r\n                    title: \r\n                    {value: responseData.place.title, isValid: true},\r\n                    description:\r\n                    {value: responseData.place.description, isValid:true}\r\n                }, true);\r\n            } catch (err) {}\r\n        };\r\n        fetchPlace();\r\n    }, [sendRequest, placeId, setFormData]);\r\n    \r\n    const placeUpdateSubmitHandler = async event => {\r\n        event.preventDefault();\r\n        try {\r\n            await sendRequest(\r\n                process.env.REACT_APP_BACKEND_URL + `/places/${placeId}`, 'PATCH',\r\n                JSON.stringify({\r\n                    title: formState.inputs.title.value,\r\n                    description: formState.inputs.description.value\r\n                }),\r\n                {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer '+ auth.token\r\n                }\r\n            );\r\n            history.push('/'+ auth.userId + '/places');\r\n         } catch (err) {}\r\n    }\r\n\r\n    if(isLoading){\r\n        return (\r\n            <div className=\"center\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if(!loadedPlace && !error){\r\n        return (\r\n            <div className=\"center\">\r\n                <Card>\r\n                <h2> Could not find place!</h2>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {!isLoading && loadedPlace && \r\n                <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n                    <Input \r\n                    id=\"title\" \r\n                    element=\"input\" \r\n                    type=\"text\" \r\n                    label=\"Title\"\r\n                    validators={[VALIDATOR_REQUIRE]} \r\n                    errorText=\"Please enter a valid title.\" \r\n                    onInput={inputHandler}\r\n                    initialValue={loadedPlace.title}\r\n                    initialValid={true}/>\r\n                    <Input \r\n                    id=\"description\" \r\n                    element=\"textarea\"\r\n                    label=\"Description\"\r\n                    validators={[VALIDATOR_MINLENGTH(5)]} \r\n                    errorText=\"Please enter a valid description (at least 5 characters).\" \r\n                    onInput={inputHandler}\r\n                    initialValue={loadedPlace.description}\r\n                    initialValid={true}/>\r\n                    <Button type=\"submit\" disabled={!formState.isValid}>UPDATE PLACE</Button>\r\n                </form>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default UpdatePlace;"],"sourceRoot":""}