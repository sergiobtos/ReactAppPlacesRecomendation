{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","height","UserItem","to","id","process","name","placeCount","UsersList","items","length","map","user","places","Users","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedUsers","setLoadedUsers","useEffect","a","responseData","users","fetchUsers","Fragment","ErrorModal","onClear","LoadingSpinner"],"mappings":"+FAAA,sBAYgBA,IARH,SAAAC,GACT,OACI,qBAAKC,UAAS,eAAWD,EAAMC,WAAaC,MAAOF,EAAME,MAAzD,SACKF,EAAMG,a,8MCSHC,EAZD,SAAAJ,GACX,OACI,qBAAKC,UAAS,iBAAaD,EAAMC,WAAaC,MAAOF,EAAME,MAA3D,SACI,qBACIG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAACM,MAAOR,EAAMQ,MAAOC,OAAQT,EAAMQ,YCgB3CE,G,MAnBE,SAAAV,GACb,OACI,oBAAIC,UAAU,YAAd,SACI,cAACF,EAAA,EAAD,CAAME,UAAU,qBAAhB,SACA,eAAC,IAAD,CAAMU,GAAE,WAAMX,EAAMY,GAAZ,WAAR,UACA,qBAAKX,UAAU,mBAAf,SACI,cAAC,EAAD,CAAQK,MAAOO,yBAAA,UAAqCb,EAAMM,OAASC,IAAKP,EAAMc,SAElF,sBAAKb,UAAU,kBAAf,UACI,6BAAKD,EAAMc,OACX,+BAAKd,EAAMe,WAAX,IAA6C,IAArBf,EAAMe,WAAmB,QAAU,wBCY5DC,G,MAxBG,SAAAhB,GACd,OAA0B,IAAvBA,EAAMiB,MAAMC,OAEX,qBAAKjB,UAAU,SAAf,SACI,cAACF,EAAA,EAAD,UACD,qDAOH,oBAAIE,UAAU,aAAd,SACKD,EAAMiB,MAAME,KAAI,SAAAC,GAAI,OACrB,cAAC,EAAD,CACAR,GAAIQ,EAAKR,GACTN,MAAOc,EAAKd,MACZQ,KAAMM,EAAKN,KACXC,WAAYK,EAAKC,OAAOH,QAJTE,EAAKR,W,wBCejBU,UA5BD,WACV,MAAqDC,cAA7CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WACvC,EAAsCC,qBAAtC,mBAAOC,EAAP,KAAoBC,EAApB,KAeA,OAZAC,qBAAU,YACU,uCAAG,4BAAAC,EAAA,+EAGgBN,EAAYb,mCAH5B,OAGLoB,EAHK,OAIXH,EAAeG,EAAaC,OAJjB,uGAAH,qDAQhBC,KACD,CAACT,IAEG,eAAC,IAAMU,SAAP,WACH,cAACC,EAAA,EAAD,CAAYZ,MAAOA,EAAOa,QAASX,IAClCH,GACG,qBAAKvB,UAAU,SAAf,SACA,cAACsC,EAAA,EAAD,OAGFf,GAAaK,GAAe,cAAC,EAAD,CAAWZ,MAAOY","file":"static/js/8.d9f4a0d9.chunk.js","sourcesContent":["//imr\r\nimport React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n    return(\r\n        <div className={ `card ${props.className}`} style={props.style}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default  Card;\r\n\r\n","//imr\r\nimport React from 'react';\r\nimport './Avatar.css';\r\n\r\nconst Avatar = props => {\r\n    return(\r\n        <div className={ `avatar ${props.className}`} style={props.style}>\r\n            <img\r\n                src={props.image}\r\n                alt={props.alt}\r\n                style={{width: props.width, height: props.width}}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default  Avatar;\r\n\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Avatar from '../../shared/components/UIElements/Avatar';\r\nimport './UserItem.css';\r\n\r\nconst UserItem = props => {\r\n    return(\r\n        <li className=\"user-item\">\r\n            <Card className=\"user-item__content\">\r\n            <Link to={`/${props.id}/places`}>\r\n            <div className=\"user-item__image\">\r\n                <Avatar image={process.env.REACT_APP_ASSET_URL + `${props.image}`} alt={props.name}/>\r\n            </div>\r\n            <div className=\"user-item__info\">\r\n                <h2>{props.name}</h2>\r\n                <h3>{props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}</h3>\r\n            </div>\r\n            </Link>\r\n            </Card>\r\n        </li>\r\n    )\r\n\r\n};\r\n\r\nexport default UserItem;","import React from 'react';\r\nimport UserItem from './UserItem';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport './UsersList.css';\r\n\r\nconst UsersList = props => {\r\n    if(props.items.length === 0){\r\n        return (\r\n        <div className=\"center\">\r\n            <Card>\r\n           <h2>No users found.</h2>\r\n           </Card> \r\n        </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ul className=\"users-list\">\r\n            {props.items.map(user => (\r\n            <UserItem key={user.id} \r\n            id={user.id} \r\n            image={user.image} \r\n            name={user.name}\r\n            placeCount={user.places.length}/>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default UsersList;","import React, { useEffect, useState} from \"react\";\r\nimport UsersList from \"../components/UsersList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst Users = () =>{\r\n    const { isLoading, error, sendRequest, clearError} = useHttpClient();\r\n    const [loadedUsers, setLoadedUsers] = useState();\r\n    \r\n    \r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                \r\n                const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/users');\r\n                setLoadedUsers(responseData.users);\r\n            } catch (err) {\r\n            }  \r\n        };\r\n        fetchUsers();\r\n    }, [sendRequest]);\r\n    \r\n    return <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        {isLoading && (\r\n            <div className=\"center\">\r\n            <LoadingSpinner/>\r\n            </div>\r\n        )}\r\n        {!isLoading && loadedUsers && <UsersList items={loadedUsers}/>}\r\n        </React.Fragment>\r\n};\r\n\r\nexport default Users;"],"sourceRoot":""}