{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTime","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.285f0f1b.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\n\r\nexport const AuthContext =  createContext({\r\n    isLoggedIn: false,\r\n    userId: null, \r\n    token: null,\r\n    login: () => {},\r\n    logout: () => {}\r\n});","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = props => {\r\n    return ReactDOM.createPortal(\r\n        <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n        document.getElementById('backdrop-hook')\r\n    );\r\n};\r\n\r\nexport default Backdrop;\r\n","import {useState, useCallback, useEffect} from 'react';\r\n\r\nlet logoutTime;\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(false);\r\n    const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n    const [userId, setUserId] = useState(false);\r\n\r\n    const login = useCallback((uid, token, expirationDate) => {\r\n        setToken(token);\r\n        const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n        setTokenExpirationDate(tokenExpirationDate);\r\n        localStorage.setItem(\r\n          'userData', \r\n          JSON.stringify({\r\n            userId: uid, \r\n            token: token, \r\n            expiration: tokenExpirationDate.toISOString()\r\n          })\r\n        );\r\n        setUserId(uid);\r\n      }, []);\r\n\r\n      const logout = useCallback(() => {\r\n        setToken(null);\r\n        setTokenExpirationDate(null);\r\n        setUserId(null);\r\n        localStorage.removeItem('userData');\r\n      }, []);\r\n    \r\n      useEffect(() => {\r\n        if(token && tokenExpirationDate){\r\n          const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n          logoutTime = setTimeout(logout,remainingTime);\r\n        }else{\r\n          clearTimeout(logoutTime);\r\n        }\r\n      }, [token, logout, tokenExpirationDate])\r\n    \r\n      useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem('userData'));\r\n        if(storedData && storedData.token && new Date(storedData.expiration) > new Date()){\r\n          login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n        }\r\n      }, [login]);\r\n    \r\n      return {token, login, logout, userId};\r\n}","//imr\r\nimport React from 'react';\r\nimport './MainHeader.css';\r\n\r\nconst MainHeader = props => {\r\n    return <header className=\"main-header\">\r\n        {props.children}\r\n    </header>\r\n};\r\n\r\nexport default  MainHeader;\r\n\r\n","import React, {useContext} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../../context/auth-context';\r\nimport './NavLinks.css';\r\n\r\nconst NavLinks = props => {\r\n    const auth = useContext(AuthContext);\r\n    return (\r\n    <ul className=\"nav-links\">\r\n        <li>\r\n            <NavLink to=\"/\" exact>All Users</NavLink>\r\n        </li>\r\n        {auth.isLoggedIn && (\r\n            <li>\r\n                <NavLink to={`/${auth.userId}/places`}>My Places</NavLink>\r\n            </li>\r\n        )}\r\n        {auth.isLoggedIn && (\r\n            <li>\r\n                <NavLink to=\"/places/new\">New Place</NavLink>\r\n            </li>\r\n        )}\r\n        {!auth.isLoggedIn && (\r\n            <li>\r\n                <NavLink to=\"/auth\">Authenticate</NavLink>\r\n            </li>\r\n        )}\r\n        {auth.isLoggedIn && (\r\n            <button onClick={auth.logout}>LOGOUT</button>\r\n        )}\r\n    </ul>\r\n)};\r\n\r\nexport default  NavLinks;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition} from 'react-transition-group';\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = props =>{\r\n    const content =(\r\n    <CSSTransition in={props.show} timeout={200} classNames=\"slide-in-left\" mountOnEnter unmountOnExit>\r\n        <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n    </CSSTransition>\r\n    );\r\n\r\n    return ReactDOM.createPortal(content, document.getElementById('drawer-hook') );\r\n};\r\n\r\nexport default SideDrawer;\r\n","//imr\r\nimport React, { useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MainHeader from './MainHeader';\r\nimport NavLinks from './NavLinks';\r\nimport SideDrawer from './SideDrawer';\r\nimport Backdrop from '../UIElements/Backdrop';\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation = props => {\r\n    const[drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n    const openDrawerHandler = () => {\r\n        setDrawerIsOpen(true);        \r\n    }\r\n\r\n    const closeDrawerHandler = () => {\r\n        setDrawerIsOpen(false);\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n        {drawerIsOpen && <Backdrop onClick={closeDrawerHandler}/>}\r\n        \r\n        <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n            <nav className=\"main-navigation__drawer-nav\">\r\n                <NavLinks />\r\n            </nav>\r\n        </SideDrawer>\r\n    <MainHeader>\r\n       <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n           <span/>\r\n           <span/>\r\n           <span/>\r\n        </button> \r\n        <h1 className=\"main-navigation__title\">\r\n            <Link to=\"/\">Your Places</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\"><NavLinks/></nav>\r\n    </MainHeader>\r\n    </React.Fragment>\r\n)};\r\n\r\nexport default  MainNavigation;\r\n\r\n","import React, {Suspense} from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\r\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\r\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\r\n//import Users from './user/pages/Users';\r\n//import NewPlace from './places/pages/NewPlace';\r\n//import UserPlaces from './places/pages/UserPlaces';\r\n//import UpdatePlace from './places/pages/UpdatePlace';\r\n//import Auth from './user/pages/Auth';\r\nimport { AuthContext } from './shared/context/auth-context';\r\nimport { useAuth } from './shared/hooks/auth-hook';\r\n\r\nconst Users = React.lazy(() => import('./user/pages/Users'));\r\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\r\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\r\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\r\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\r\n\r\nconst App = () => {\r\n  const { token, login, logout, userId } = useAuth();\r\n  let routes;\r\n\r\n  if(token){\r\n    routes=(\r\n      <Switch>\r\n      <Route path=\"/\" exact> <Users/> </Route>\r\n      <Route path=\"/:userId/places\" exact><UserPlaces/></Route>\r\n      <Route path=\"/places/new\" exact> <NewPlace/> </Route>\r\n      <Route path=\"/places/:placeId\"><UpdatePlace/> </Route>\r\n      <Redirect to=\"/\"/>\r\n    </Switch>\r\n    );\r\n  }else{\r\n    routes = (\r\n    <Switch>\r\n      <Route path=\"/\" exact> <Users/> </Route>\r\n      <Route path=\"/:userId/places\" exact><UserPlaces/></Route>\r\n      <Route path=\"/auth\"><Auth/></Route>\r\n      <Redirect to=\"/auth\"/>\r\n    </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider \r\n      value={{\r\n        isLoggedIn: !!token, \r\n        token: token,\r\n        userId: userId, \r\n        login: login, \r\n        logout: logout\r\n        }}\r\n    >\r\n      <Router>\r\n        <MainNavigation/>\r\n        <main>\r\n          <Suspense fallback={<div className=\"center\"><LoadingSpinner/></div>}>\r\n          {routes}\r\n          </Suspense>\r\n        </main>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  )};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  //<React.StrictMode>\r\n    <App />,\r\n  //</React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}